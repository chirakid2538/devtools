version: "3.7"

services:
  redis:
    image: redis:7.0
    container_name: devtool_redis
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"

    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./data/redis:/data
  # minio:
  #     image: minio/minio:RELEASE.2021-01-08T21-18-21Z
  #     container_name: devtool_minio
  #     command: server /data
  #     restart: always
  #     environment:
  #         MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
  #         MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
  #     ports:
  #       - ${MINIO_PORT}:${MINIO_PORT}
  mysql:
    image: mysql
    container_name: devtool_mysql
    restart: always
    # cap_add:
    #     - SYS_NICE
    volumes:
      - ./data/mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    # security_opt:
    #     - seccomp:unconfined
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: devtool_phpmyadmin
    restart: always
    ports:
      - ${PMA_PORT}:80
    environment:
      PMA_HOST: ${PMA_DB_ENGINE}
      UPLOAD_LIMIT: 1000M
  mongo:
    image: mongo:6.0
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./data/mongo:/data/db
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 50M
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    tty: true
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_PASS: example
      RABBITMQ_DEFAULT_USER: root
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq/mnesia/
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 100M
  postgres:
    image: postgres:16.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 100M
  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:latest
    ports:
      - 9411:9411
